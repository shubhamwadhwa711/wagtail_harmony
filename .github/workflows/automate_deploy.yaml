# name: Harmony VM Deployment

# on:
#   push:
#     branches: ["main"]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

  
#       - name: Set environment variables from GitHub Secrets
#         env:
#           DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
#           DB_NAME: ${{ secrets.DB_NAME }}
#           DB_USER: ${{ secrets.DB_USER }}
#           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#           DB_HOST: ${{ secrets.DB_HOST }}
#           DB_PORT: ${{ secrets.DB_PORT }}
#         run: echo "Environment variables set successfully"



#       - name: Pull latest code
#         run: git pull origin main || { echo "Git pull failed"; exit 1; }



#       - name: Run Docker
#         run: |
#           echo "Docker build"
#           docker compose build --no-cache || { echo "docker failed"; exit 2; }

#           echo "Docker run in background"
#           docker compose up -d || { echo "docker failed background"; exit 3; }



name: Harmony VM Deployment

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables from GitHub Secrets
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: echo "Environment variables set successfully"

      - name: Pull latest code
        run: git pull origin main || { echo "Git pull failed"; exit 1; }

      - name: Run Docker
        run: |
          echo "Docker build"
          docker compose build \
            --build-arg DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --no-cache || { echo "docker failed"; exit 2; }

          echo "Docker run in background"
          docker compose up -d || { echo "docker failed background"; exit 3; }
