# Generated by Django 5.1.2 on 2024-11-27 04:47

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        (
            "history",
            "0004_rename_bottom_button_text_historiespage_footer_button_text_and_more",
        ),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.RenameField(
            model_name="historypage",
            old_name="content_full_description",
            new_name="full_description",
        ),
        migrations.RenameField(
            model_name="historypage",
            old_name="content_short_description",
            new_name="short_description",
        ),
        migrations.CreateModel(
            name="HistoryTags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="history.historypage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="historypage",
            name="tags",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="history.HistoryTags",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
